@page "/counter"

<h1>Counter</h1>

<p>Current count:
    <span class="@backgroundColor">@currentCount</span>
</p>

<p>
    <input type="number" @bind="@increment" @onkeypress="KeyHandler" @onkeypress:preventDefault />
</p>

<button class="btn btn-primary"
        disabled="@(currentCount>=10)"
        @onclick="IncrementCount">Click me</button>
<button class="btn btn-secondary" @onclick="AutoIncrement">AutoIncrement</button>

<div style="width: 400px; height: 400px; background: yellow" @onmousemove="OuterMouseMove">
    @outerPos
    <div style="width: 300px; height: 300px; background: green; margin: 50px" @onmousemove="InnerMouseMove" @onmousemove:stopPropagation>
        @innerPos
    </div>
</div>

@code {
    private int currentCount = 0;
    private int increment = 1;
    private string backgroundColor = "red-background" ;
    private String outerPos = "nothing yet";
    private void OuterMouseMove(MouseEventArgs e) => outerPos = $"Mouse last at {e.ClientX}x{e.ClientY}";
    private String innerPos = "nothing yet";
    private void InnerMouseMove(MouseEventArgs e) => innerPos = $"Mouse last at {e.ClientX}x{e.ClientY}";

    private void AutoIncrement()
    {
        var timer = new System.Threading.Timer((_) =>
        {
            IncrementCount();
            this.StateHasChanged();
        }, null, TimeSpan.FromSeconds(1), TimeSpan.FromSeconds(1));
    }

    private void IncrementCount()
    {
        currentCount += increment;
        backgroundColor = (currentCount % 2 == 0) ? "red-background" : "yellow-background";
    }

    private void KeyHandler(KeyboardEventArgs e)
    {
        Console.WriteLine(e.Code);
        if (e.Key == "+")
        {
            increment += 1;
        }
        if (e.Key == "-")
        {
            increment -= 1;
        }
    }
}
